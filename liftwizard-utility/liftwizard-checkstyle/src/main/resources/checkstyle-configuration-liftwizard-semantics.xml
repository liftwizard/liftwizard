<?xml version="1.0"?>
<!--
  ~ Copyright 2024 Craig Motlin
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!DOCTYPE module PUBLIC
        "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
        "https://checkstyle.org/dtds/configuration_1_3.dtd">

<!-- Adapted from https://github.com/checkstyle/checkstyle/blob/master/config/checkstyle-checks.xml -->
<module name="Checker">
    <property name="severity" value="error" />

    <!--region Filters-->
    <module name="SeverityMatchFilter">
        <!-- report all violations except ignore -->
        <property name="severity" value="ignore" />
        <property name="acceptOnMatch" value="false" />
    </module>

    <!-- Tone down the checking for test code -->
    <module name="SuppressionSingleFilter">
        <property name="checks" value="JavadocPackage" />
        <property name="files" value=".*[\\/]src[\\/](test|it|xdocs-examples)[\\/]" />
    </module>
    <module name="SuppressionSingleFilter">
        <property name="checks" value="JavadocMethod" />
        <property name="files"
                value=".*[\\/]src[\\/](test|it|xdocs-examples)[\\/].*(?&lt;!Support)\.java" />
    </module>
    <!--endregion-->

    <!--region Miscellaneous-->
    <!--https://checkstyle.sourceforge.io/checks/misc/index.html-->
    <module name="UniqueProperties" />
    <!--endregion-->

    <!--region Regexp-->
    <!--https://checkstyle.sourceforge.io/checks/regexp/index.html-->
    <module name="RegexpMultiline">
        <property name="id" value="commentFirstSentenceMultiline" />
        <property name="format" value="/\*\*\W+\* +\p{javaLowerCase}" />
        <property name="fileExtensions" value="java" />
        <property name="message"
                value="First sentence in a comment should start with a capital letter" />
    </module>
    <module name="RegexpSingleline">
        <property name="id" value="commentFirstSentenceSingleline" />
        <property name="format" value="/\*\* +\p{javaLowerCase}" />
        <property name="fileExtensions" value="java" />
        <property name="message"
                value="First sentence in a comment should start with a capital letter" />
    </module>
    <!--
     Links to .dtd files should start with "/", "http://" or "https://",
     otherwise they will be broken after archiving the documentation.
     See https://github.com/checkstyle/checkstyle/issues/7340 for details.
    -->
    <module name="RegexpSingleline">
        <property name="id" value="noRelativeLinks" />
        <property name="format" value="href=&quot;(?!\/|https?:\/\/).*?\.dtd&quot;" />
        <property name="fileExtensions" value="xml, vm" />
        <property name="message"
                value="Relative links to DTD files are prohibited. Please use absolute path or uri instead." />
    </module>
    <module name="RegexpSingleline">
        <property name="id" value="noPackageCommentWithOtherVisibility" />
        <property name="format" value="/\*\s+package\s+\*/\s+(private|protected|public)" />
        <property name="fileExtensions" value="java" />
        <property name="message"
                value="Package comment marker should not be used if other visibility is defined" />
    </module>
    <!--endregion-->

    <module name="TreeWalker">
        <property name="tabWidth" value="4" />

        <!--region Filters-->
        <!--endregion-->

        <!--region Annotations-->
        <!--https://checkstyle.sourceforge.io/checks/annotation/index.html-->
        <module name="MissingDeprecated" />
        <module name="MissingOverride" />
        <module name="PackageAnnotation" />
        <module name="SuppressWarningsHolder" />
        <!--endregion-->

        <!--region Blocks-->
        <!--https://checkstyle.sourceforge.io/checks/blocks/index.html-->
        <module name="EmptyBlock">
            <property name="tokens" value="ARRAY_INIT" />
            <property name="tokens" value="INSTANCE_INIT" />
            <property name="tokens" value="LITERAL_CASE" />
            <property name="tokens" value="LITERAL_CATCH" />
            <property name="tokens" value="LITERAL_DEFAULT" />
            <property name="tokens" value="LITERAL_DO" />
            <property name="tokens" value="LITERAL_ELSE" />
            <property name="tokens" value="LITERAL_FINALLY" />
            <property name="tokens" value="LITERAL_FOR" />
            <property name="tokens" value="LITERAL_IF" />
            <property name="tokens" value="LITERAL_SWITCH" />
            <property name="tokens" value="LITERAL_SYNCHRONIZED" />
            <property name="tokens" value="LITERAL_TRY" />
            <property name="tokens" value="LITERAL_WHILE" />
            <property name="tokens" value="STATIC_INIT" />
            <property name="option" value="text" />
        </module>
        <module name="EmptyCatchBlock">
            <property name="exceptionVariableName" value="ignored" />
        </module>
        <!--endregion-->

        <!--region Class Design-->
        <!--https://checkstyle.sourceforge.io/checks/design/index.html-->
        <!-- Effective Java Item 17 - Use interfaces only to define types -->
        <module name="InterfaceIsType" />
        <module name="MutableException" />
        <module name="OneTopLevelClass" />
        <!--endregion-->

        <!--region Coding-->
        <!--https://checkstyle.sourceforge.io/checks/coding/index.html-->
        <module name="ArrayTrailingComma" />
        <module name="AvoidDoubleBraceInitialization" />
        <module name="AvoidNoArgumentSuperConstructorCall" />
        <module name="CovariantEquals" />
        <module name="DefaultComesLast" />
        <module name="EmptyStatement" />
        <!-- Effective Java Item 8 - Always override hashCode when you override equals -->
        <module name="EqualsHashCode" />
        <module name="FallThrough" />
        <module name="IllegalCatch">
            <property name="illegalClassNames" value="java.lang.Error" />
            <property name="illegalClassNames" value="java.lang.NullPointerException" />
            <property name="illegalClassNames" value="java.lang.Throwable" />
        </module>
        <!-- Effective Java Item 4 - Avoid creating duplicate objects -->
        <module name="IllegalInstantiation">
            <property name="id" value="primitiveFactoryIllegalInstantiation" />
            <property name="classes" value="java.lang.Boolean" />
            <property name="classes" value="java.lang.Byte" />
            <property name="classes" value="java.lang.Character" />
            <property name="classes" value="java.lang.Integer" />
            <property name="classes" value="java.lang.Long" />
            <property name="classes" value="java.lang.Short" />
        </module>
        <module name="IllegalInstantiation">
            <property name="id" value="stringBufferToStringBuilderIllegalInstantiation" />
            <property name="classes" value="java.lang.StringBuffer" />
        </module>
        <module name="IllegalInstantiation">
            <property name="id" value="oldConcurrencyIllegalInstantiation" />
            <property name="classes" value="java.util.Timer" />
            <property name="classes" value="java.util.TimerTask" />
        </module>
        <module name="IllegalThrows" />
        <module name="IllegalToken">
            <property name="tokens" value="LABELED_STAT" />
            <property name="tokens" value="LITERAL_NATIVE" />
            <property name="tokens" value="LITERAL_VOLATILE" />
            <property name="tokens" value="LITERAL_ASSERT" />
        </module>
        <module name="IllegalTokenText">
            <property name="tokens" value="STRING_LITERAL" />
            <property name="format" value="^(US-ASCII|ISO-8859-1|UTF-8|UTF-16BE|UTF-16LE|UTF-16)$" />
            <property name="ignoreCase" value="true" />
        </module>
        <module name="IllegalType">
            <message key="illegal.type" value="Usage of concrete type ''{0}'' is only allowed for constructor calls. Use an interface here instead." />
            <property name="illegalClassNames" value="java.util.ArrayDeque" />
            <property name="illegalClassNames" value="java.util.ArrayList" />
            <property name="illegalClassNames" value="java.util.EnumMap" />
            <property name="illegalClassNames" value="java.util.EnumSet" />
            <property name="illegalClassNames" value="java.util.HashMap" />
            <property name="illegalClassNames" value="java.util.HashSet" />
            <property name="illegalClassNames" value="java.util.Hashtable" />
            <property name="illegalClassNames" value="java.util.IdentityHashMap" />
            <property name="illegalClassNames" value="java.util.LinkedHashMap" />
            <property name="illegalClassNames" value="java.util.LinkedHashSet" />
            <property name="illegalClassNames" value="java.util.LinkedList" />
            <property name="illegalClassNames" value="java.util.PriorityQueue" />
            <property name="illegalClassNames" value="java.util.Stack" />
            <property name="illegalClassNames" value="java.util.TreeMap" />
            <property name="illegalClassNames" value="java.util.TreeSet" />
            <property name="illegalClassNames" value="java.util.Vector" />
            <property name="illegalClassNames" value="java.util.WeakHashMap" />
            <property name="illegalClassNames" value="java.util.concurrent.ArrayBlockingQueue" />
            <property name="illegalClassNames" value="java.util.concurrent.ConcurrentHashMap" />
            <property name="illegalClassNames" value="java.util.concurrent.ConcurrentLinkedDeque" />
            <property name="illegalClassNames" value="java.util.concurrent.ConcurrentLinkedQueue" />
            <property name="illegalClassNames" value="java.util.concurrent.ConcurrentSkipListMap" />
            <property name="illegalClassNames" value="java.util.concurrent.ConcurrentSkipListSet" />
            <property name="illegalClassNames" value="java.util.concurrent.CopyOnWriteArrayList" />
            <property name="illegalClassNames" value="java.util.concurrent.CopyOnWriteArraySet" />
            <property name="illegalClassNames" value="java.util.concurrent.DelayQueue" />
            <property name="illegalClassNames" value="java.util.concurrent.LinkedBlockingDeque" />
            <property name="illegalClassNames" value="java.util.concurrent.LinkedBlockingQueue" />
            <property name="illegalClassNames" value="java.util.concurrent.PriorityBlockingQueue" />
            <property name="illegalClassNames" value="java.util.concurrent.SynchronousQueue" />
        </module>
        <module name="InnerAssignment" />
        <module name="MatchXpath">
            <property name="query" value="//CLASS_DEF[@text!='Checker' and @text!='Main']
      //LITERAL_CATCH//METHOD_CALL[.//IDENT[@text = 'printStackTrace']]/.." />
            <message key="matchxpath.match" value="Avoid using 'printStackTrace'." />
        </module>
        <module name="MatchXpath">
            <property name="query" value="//METHOD_DEF/MODIFIERS//
            ANNOTATION[./IDENT[@text='Test']]/ANNOTATION_MEMBER_VALUE_PAIR
            [./IDENT[@text='expected']]" />
            <message key="matchxpath.match" value="Avoid using 'expected' attribute in Test annotation." />
        </module>
        <module name="MatchXpath">
            <property name="query" value="//COMMENT_CONTENT[contains(@text, '@noinspection')
                      and not(contains(@text, '@noinspectionreason'))]" />
            <message key="matchxpath.match"
                    value="'@noinspection' Javadoc tags should be accompanied by a
                     '@noinspectionreason' tag, explaining why we suppressed inspection." />
        </module>
        <module name="MissingSwitchDefault" />
        <module name="ModifiedControlVariable" />
        <module name="MultipleVariableDeclarations" />
        <module name="NoClone" />
        <module name="NoCodeInFile" />
        <!-- Effective Java: Avoid finalizers and cleaners -->
        <module name="NoFinalizer" />
        <module name="OneStatementPerLine" />
        <module name="OverloadMethodsDeclarationOrder" />
        <module name="PackageDeclaration" />
        <module name="ParameterAssignment" />
        <module name="RequireThis" />
        <module name="SimplifyBooleanExpression" />
        <module name="SimplifyBooleanReturn" />
        <module name="StringLiteralEquality" />
        <module name="SuperClone" />
        <module name="SuperFinalize" />
        <module name="UnnecessarySemicolonAfterOuterTypeDeclaration" />
        <module name="UnnecessarySemicolonAfterTypeMemberDeclaration" />
        <module name="UnnecessarySemicolonInEnumeration" />
        <module name="UnnecessarySemicolonInTryWithResources" />
        <!--endregion-->

        <!--region Imports-->
        <!--https://checkstyle.sourceforge.io/checks/imports/index.html-->
        <module name="AvoidStarImport">
            <property name="allowStaticMemberImports" value="true" />
        </module>
        <module name="IllegalImport" />
        <module name="RedundantImport" />
        <module name="UnusedImports">
            <property name="processJavadoc" value="true" />
        </module>
        <!--endregion-->

        <!--region Javadoc-->
        <!--https://checkstyle.sourceforge.io/checks/javadoc/index.html-->
        <module name="InvalidJavadocPosition" />
        <module name="NonEmptyAtclauseDescription" />
        <!--endregion-->

        <!--region Miscellaneous-->
        <!--https://checkstyle.sourceforge.io/checks/misc/index.html-->
        <module name="ArrayTypeStyle" />
        <module name="AvoidEscapedUnicodeCharacters">
            <property name="allowIfAllCharactersEscaped" value="true" />
        </module>
        <module name="DescendantToken" />
        <module name="OuterTypeFilename" />
        <module name="UpperEll" />
        <!--endregion-->

        <!--region Modifiers-->
        <!--https://checkstyle.sourceforge.io/checks/modifier/index.html-->
        <module name="ModifierOrder" />
        <module name="RedundantModifier" />
        <!--endregion-->

        <!--region Naming Conventions-->
        <!--https://checkstyle.sourceforge.io/checks/naming/index.html-->
        <module name="ClassTypeParameterName">
            <!--Instead of single letter names like T, allow words like Type-->
            <property name="format" value="^[A-Z][a-zA-Z0-9]*$" />
        </module>
        <module name="RecordTypeParameterName">
            <!--Instead of single letter names like T, allow words like Type-->
            <property name="format" value="^[A-Z][a-zA-Z0-9]*$" />
        </module>
        <module name="RecordComponentName" />
        <module name="ConstantName" />
        <module name="InterfaceTypeParameterName">
            <!--Instead of single letter names like T, allow words like Type-->
            <property name="format" value="^[A-Z][a-zA-Z0-9]*$" />
        </module>
        <module name="LocalFinalVariableName" />
        <module name="LocalVariableName">
            <property name="allowOneCharVarInForLoop" value="true" />
        </module>
        <module name="MemberName" />
        <module name="MethodName">
            <!--Allow underscores, since they are common in tests-->
            <property name="format" value="^[a-z][a-zA-Z0-9_]*$" />
        </module>
        <module name="MethodTypeParameterName">
            <!--Instead of single letter names like T, allow words like Type-->
            <property name="format" value="^[A-Z][a-zA-Z0-9]*$" />
        </module>
        <module name="PackageName">
            <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$" />
        </module>
        <module name="ParameterName">
            <property name="ignoreOverridden" value="true" />
        </module>
        <module name="LambdaParameterName" />
        <module name="CatchParameterName" />
        <module name="StaticVariableName" />
        <module name="TypeName">
            <property name="format" value="(^[A-Z][a-zA-Z0-9]*$)|(^[A-Z][a-zA-Z0-9_]*Test$)" />
        </module>
        <module name="PatternVariableName" />
        <!--endregion-->

        <!--region Regexp-->
        <!--https://checkstyle.sourceforge.io/checks/regexp/index.html-->
        <module name="Regexp">
            <property name="illegalPattern" value="true" />
            <property name="format" value="[’“”]" />
            <property name="message" value="Curly quotes aren't allowed." />
        </module>

        <module name="Regexp">
            <property name="illegalPattern" value="true" />
            <property name="format" value="[ ]+$" />
            <property name="message" value="Line has trailing spaces." />
        </module>

        <module name="RegexpSinglelineJava">
            <property name="ignoreComments" value="true" />

            <property
                    name="format"
                    value=", \w+,\n" />

            <property
                    name="message"
                    value="Comma separated list should have one item per line, or be all on a single line." />
        </module>

        <module name="RegexpSinglelineJava">
            <property name="ignoreComments" value="true" />

            <property
                    name="format"
                    value="\(\w+,\n" />

            <property
                    name="message"
                    value="Comma separated list should have one item per line, or be all on a single line." />
        </module>
        <!--endregion-->
    </module>

</module>
