on:
  pull_request:
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  maven-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          key: maven-test-${{ hashFiles('**/pom.xml') }}
          path: ~/.m2/repository
          restore-keys: |
            maven-test-
            maven-

      - uses: actions/setup-java@v4
        with:
          java-version-file: .tool-versions
          distribution: oracle

      - run: ./mvnw verify

      - name: "Clean Maven cache"
        run: rm -rf ~/.m2/repository/io/liftwizard

  maven-coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          key: maven-coverage-${{ hashFiles('**/pom.xml') }}
          path: ~/.m2/repository
          restore-keys: |
            maven-coverage-
            maven-

      - uses: actions/setup-java@v4
        with:
          java-version-file: .tool-versions
          distribution: oracle

      - run: ./mvnw verify --activate-profiles jacoco-maven-plugin

      - uses: madrapps/jacoco-report@v1.7.1
        with:
          paths: |
            ${{ github.workspace }}/**/target/site/jacoco/jacoco.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "Jacoco Code Coverage"
          update-comment: true
          min-coverage-overall: 0
          min-coverage-changed-files: 0

      - name: "Clean Maven cache"
        run: rm -rf ~/.m2/repository/io/liftwizard

  maven-enforcer:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          key: maven-enforcer-${{ hashFiles('**/pom.xml') }}
          path: ~/.m2/repository
          restore-keys: |
            maven-enforcer-
            maven-

      - uses: actions/setup-java@v4
        with:
          java-version-file: .tool-versions
          distribution: oracle

      - name: Run maven-enforcer-plugin
        run: ./mvnw verify --activate-profiles maven-enforcer-plugin -DskipTests

      - name: "Clean Maven cache"
        run: rm -rf ~/.m2/repository/io/liftwizard

  maven-dependency:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          key: maven-dependency-${{ hashFiles('**/pom.xml') }}
          path: ~/.m2/repository
          restore-keys: |
            maven-dependency-
            maven-

      - uses: actions/setup-java@v4
        with:
          java-version-file: .tool-versions
          distribution: oracle

      - name: Run maven-dependency-plugin
        run: ./mvnw verify --activate-profiles maven-dependency-plugin -DskipTests

      - name: "Clean Maven cache"
        run: rm -rf ~/.m2/repository/io/liftwizard

  maven-javadoc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          key: maven-javadoc-${{ hashFiles('**/pom.xml') }}
          path: ~/.m2/repository
          restore-keys: |
            maven-javadoc-
            maven-

      - uses: actions/setup-java@v4
        with:
          java-version-file: .tool-versions
          distribution: oracle

      - name: Run maven-javadoc-plugin
        run: ./mvnw verify --activate-profiles maven-javadoc-plugin -DskipTests

      - name: "Clean Maven cache"
        run: rm -rf ~/.m2/repository/io/liftwizard

  checkstyle-semantics:
    name: checkstyle xml (semantics)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - uses: actions/cache@v4
        with:
          key: maven-checkstyle-${{ hashFiles('**/pom.xml') }}
          path: ~/.m2/repository
          restore-keys: |
            maven-checkstyle-
            maven-

      - uses: actions/setup-java@v4
        with:
          java-version-file: .tool-versions
          distribution: oracle

      - name: "Install liftwizard-checkstyle module"
        run: ./mvnw install --projects liftwizard-utility/liftwizard-checkstyle

      - name: "Produce Checkstyle XML: Semantics"
        run: ./mvnw checkstyle:check --activate-profiles 'checkstyle-semantics'

      - name: "Clean Maven cache"
        run: rm -rf ~/.m2/repository/io/liftwizard

  checkstyle-semantics-strict:
    name: checkstyle xml (semantics strict)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - uses: actions/cache@v4
        with:
          key: maven-checkstyle-${{ hashFiles('**/pom.xml') }}
          path: ~/.m2/repository
          restore-keys: |
            maven-checkstyle-
            maven-

      - uses: actions/setup-java@v4
        with:
          java-version-file: .tool-versions
          distribution: oracle

      - name: "Install liftwizard-checkstyle module"
        run: ./mvnw install --projects liftwizard-utility/liftwizard-checkstyle

      - name: "Produce Checkstyle XML: Strict Semantics"
        run: ./mvnw checkstyle:check --activate-profiles 'checkstyle-semantics-strict'

      - name: "Clean Maven cache"
        run: rm -rf ~/.m2/repository/io/liftwizard

  checkstyle-formatting:
    name: checkstyle xml (formatting)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - uses: actions/cache@v4
        with:
          key: maven-checkstyle-${{ hashFiles('**/pom.xml') }}
          path: ~/.m2/repository
          restore-keys: |
            maven-checkstyle-
            maven-

      - uses: actions/setup-java@v4
        with:
          java-version-file: .tool-versions
          distribution: oracle

      - name: "Install liftwizard-checkstyle module"
        run: ./mvnw install --projects liftwizard-utility/liftwizard-checkstyle

      - name: "Produce Checkstyle XML: Formatting"
        run: ./mvnw checkstyle:check --activate-profiles 'checkstyle-formatting'

      - name: "Clean Maven cache"
        run: rm -rf ~/.m2/repository/io/liftwizard

  maven-rewrite:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          key: maven-rewrite-${{ hashFiles('**/pom.xml') }}
          path: ~/.m2/repository
          restore-keys: |
            maven-rewrite-
            maven-

      - uses: actions/setup-java@v4
        with:
          java-version-file: .tool-versions
          distribution: oracle

      - name: Run rewrite-maven-plugin
        run: ./mvnw install org.openrewrite.maven:rewrite-maven-plugin:dryRun --projects '!liftwizard-example' --activate-profiles rewrite-maven-plugin,rewrite-maven-plugin-dryRun -DskipTests

      - name: "Clean Maven cache"
        run: rm -rf ~/.m2/repository/io/liftwizard

  # Check for reproducible builds with artifact:check-buildplan
  maven-reproducible:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          key: maven-reproducible-${{ hashFiles('**/pom.xml') }}
          path: ~/.m2/repository
          restore-keys: |
            maven-reproducible-
            maven-

      - uses: actions/setup-java@v4
        with:
          java-version-file: .tool-versions
          distribution: oracle

      - name: Run artifact:check-buildplan
        run: ./mvnw verify artifact:check-buildplan -DskipTests

      - name: "Clean Maven cache"
        run: rm -rf ~/.m2/repository/io/liftwizard

  # Check if the new commits in a Pull Request contain a merge commit. If so, fail and print them out.
  forbid-merge-commits:
    runs-on: ubuntu-latest
    steps:
      - uses: motlin/forbid-merge-commits-action@main

  spotless-formats:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - uses: actions/cache@v4
        with:
          key: maven-spotless-formats-${{ hashFiles('**/pom.xml') }}
          path: ~/.m2/repository
          restore-keys: |
            maven-spotless-
            maven-

      - uses: actions/setup-java@v4
        with:
          java-version-file: .tool-versions
          distribution: oracle

      - name: "Spotless Check: Formats"
        run: |
          ./mvnw spotless:check \
            --projects '!liftwizard-maven-build/liftwizard-minimal-parent' \
            --activate-profiles 'spotless-check,spotless-formats'

      - name: "Clean Maven cache"
        run: rm -rf ~/.m2/repository/io/liftwizard

  spotless-java-sort-imports:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - uses: actions/cache@v4
        with:
          key: maven-spotless-java-sort-imports-${{ hashFiles('**/pom.xml') }}
          path: ~/.m2/repository
          restore-keys: |
            maven-spotless-
            maven-

      - uses: actions/setup-java@v4
        with:
          java-version-file: .tool-versions
          distribution: oracle

      - name: "Spotless Check: Java Import Order"
        run: |
          ./mvnw spotless:check \
            --projects '!liftwizard-maven-build/liftwizard-minimal-parent' \
            --activate-profiles 'spotless-check,spotless-java-sort-imports'

      - name: "Clean Maven cache"
        run: rm -rf ~/.m2/repository/io/liftwizard

  spotless-java-unused-imports:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - uses: actions/cache@v4
        with:
          key: maven-spotless-java-unused-imports-${{ hashFiles('**/pom.xml') }}
          path: ~/.m2/repository
          restore-keys: |
            maven-spotless-
            maven-

      - uses: actions/setup-java@v4
        with:
          java-version-file: .tool-versions
          distribution: oracle

      - name: "Spotless Check: Java Unused Imports"
        run: |
          ./mvnw spotless:check \
            --projects '!liftwizard-maven-build/liftwizard-minimal-parent' \
            --activate-profiles 'spotless-check,spotless-java-unused-imports'

      - name: "Clean Maven cache"
        run: rm -rf ~/.m2/repository/io/liftwizard

  spotless-java-cleanthat:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - uses: actions/cache@v4
        with:
          key: maven-spotless-java-cleanthat-${{ hashFiles('**/pom.xml') }}
          path: ~/.m2/repository
          restore-keys: |
            maven-spotless-
            maven-

      - uses: actions/setup-java@v4
        with:
          java-version-file: .tool-versions
          distribution: oracle

      - name: "Spotless Check: Java cleanthat"
        run: |
          ./mvnw spotless:check \
            --projects '!liftwizard-maven-build/liftwizard-minimal-parent' \
            --activate-profiles 'spotless-check,spotless-java-cleanthat'

      - name: "Clean Maven cache"
        run: rm -rf ~/.m2/repository/io/liftwizard

  spotless-sql:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - uses: actions/cache@v4
        with:
          key: maven-spotless-sql-${{ hashFiles('**/pom.xml') }}
          path: ~/.m2/repository
          restore-keys: |
            maven-spotless-
            maven-

      - uses: actions/setup-java@v4
        with:
          java-version-file: .tool-versions
          distribution: oracle

      - name: "Spotless Check: Sql"
        run: |
          ./mvnw spotless:check \
            --projects '!liftwizard-maven-build/liftwizard-minimal-parent' \
            --activate-profiles 'spotless-check,spotless-sql'

      - name: "Clean Maven cache"
        run: rm -rf ~/.m2/repository/io/liftwizard

  spotless-pom:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - uses: actions/cache@v4
        with:
          key: maven-spotless-pom-${{ hashFiles('**/pom.xml') }}
          path: ~/.m2/repository
          restore-keys: |
            maven-spotless-
            maven-

      - uses: actions/setup-java@v4
        with:
          java-version-file: .tool-versions
          distribution: oracle

      - name: "Spotless Check: Pom"
        run: |
          ./mvnw spotless:check \
            --projects '!liftwizard-maven-build/liftwizard-minimal-parent' \
            --activate-profiles 'spotless-check,spotless-pom'

      - name: "Clean Maven cache"
        run: rm -rf ~/.m2/repository/io/liftwizard

  spotless-markdown:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - uses: actions/cache@v4
        with:
          key: maven-spotless-markdown-${{ hashFiles('**/pom.xml') }}
          path: ~/.m2/repository
          restore-keys: |
            maven-spotless-
            maven-

      - uses: actions/setup-java@v4
        with:
          java-version-file: .tool-versions
          distribution: oracle

      - name: "Spotless Check: Markdown"
        run: |
          ./mvnw spotless:check \
            --projects '!liftwizard-maven-build/liftwizard-minimal-parent' \
            --activate-profiles 'spotless-check,spotless-markdown'

      - name: "Clean Maven cache"
        run: rm -rf ~/.m2/repository/io/liftwizard

  spotless-json:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - uses: actions/cache@v4
        with:
          key: maven-spotless-json-${{ hashFiles('**/pom.xml') }}
          path: ~/.m2/repository
          restore-keys: |
            maven-spotless-
            maven-

      - uses: actions/setup-java@v4
        with:
          java-version-file: .tool-versions
          distribution: oracle

      - name: "Spotless Check: Json"
        run: |
          ./mvnw spotless:check \
            --projects '!liftwizard-maven-build/liftwizard-minimal-parent' \
            --activate-profiles 'spotless-check,spotless-json'

      - name: "Clean Maven cache"
        run: rm -rf ~/.m2/repository/io/liftwizard

  spotless-yaml:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - uses: actions/cache@v4
        with:
          key: maven-spotless-yaml-${{ hashFiles('**/pom.xml') }}
          path: ~/.m2/repository
          restore-keys: |
            maven-spotless-
            maven-

      - uses: actions/setup-java@v4
        with:
          java-version-file: .tool-versions
          distribution: oracle

      - name: "Spotless Check: Yaml"
        run: |
          ./mvnw spotless:check \
            --projects '!liftwizard-maven-build/liftwizard-minimal-parent' \
            --activate-profiles 'spotless-check,spotless-yaml'

      - name: "Clean Maven cache"
        run: rm -rf ~/.m2/repository/io/liftwizard

  reviewdog-markdownlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: reviewdog/action-markdownlint@v0.25.0
        with:
          reporter: github-pr-check
          fail_on_error: true
          filter_mode: nofilter

  reviewdog-yamllint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: reviewdog/action-yamllint@v1.20.0
        with:
          reporter: github-pr-check
          fail_on_error: true
          filter_mode: nofilter

  reviewdog-languagetool:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: reviewdog/action-languagetool@v1.20.0
        with:
          reporter: github-pr-check
          fail_on_error: true
          filter_mode: nofilter

  reviewdog-actionlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: reviewdog/action-actionlint@v1.57.0
        with:
          reporter: github-pr-check
          fail_on_error: true
          filter_mode: nofilter

  reviewdog-shellcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: reviewdog/action-shellcheck@v1.27.0
        with:
          reporter: github-pr-check
          fail_on_error: true
          filter_mode: nofilter
