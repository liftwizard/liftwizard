<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2024 Craig Motlin
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <groupId>io.liftwizard</groupId>
    <artifactId>liftwizard-parent-build</artifactId>
    <version>2.1.7-SNAPSHOT</version>
    <modelVersion>4.0.0</modelVersion>

    <packaging>pom</packaging>
    <name>Liftwizard Parent Build</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <project.build.outputTimestamp>2024-02-18T19:55:24Z</project.build.outputTimestamp>

        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <maven.compiler.release>17</maven.compiler.release>
        <maven.compiler.parameters>true</maven.compiler.parameters>
    </properties>

    <description>Liftwizard is a collection of bundles and add-ons for Dropwizard, the Java framework for writing web services.</description>

    <url>https://github.com/motlin/liftwizard</url>

    <issueManagement>
        <system>GitHub Issues</system>
        <url>https://github.com/motlin/liftwizard/issues</url>
    </issueManagement>

    <ciManagement>
        <system>CircleCI</system>
        <url>https://app.circleci.com/pipelines/github/motlin/liftwizard</url>
    </ciManagement>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <scm>
        <url>https://github.com/motlin/liftwizard</url>
        <connection>scm:git:https://github.com/motlin/liftwizard.git</connection>
        <developerConnection>scm:git:https@github.com:motlin/liftwizard.git</developerConnection>
      <tag>HEAD</tag>
  </scm>

    <inceptionYear>2020</inceptionYear>

    <developers>
        <developer>
            <name>Craig Motlin</name>
            <email>cmotlin@gmail.com</email>
            <url>https://github.com/motlin</url>
            <id>motlin</id>
        </developer>
    </developers>

    <dependencies>
        <!-- Without a dependency on junit-vintage-engine, some JUnit tests were accidentally not running-->
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <version>5.10.2</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.hamcrest</groupId>
                    <artifactId>hamcrest-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <defaultGoal>clean verify</defaultGoal>

        <plugins>

            <!--region Phase 21: verify-->
            <plugin>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.3.1</version>
                <configuration>
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>10.15.0</version>
                    </dependency>
                </dependencies>
            </plugin>
            <!--endregion-->

            <!--region Phase 1: validate-->
            <plugin>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>
            <!--endregion-->

            <!--region No phase-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
            </plugin>
            <!--endregion-->

            <!--region Phase 15: test-->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.2.5</version>
            </plugin>
            <!--endregion-->

            <!--region No phase-->
            <plugin>
                <groupId>fr.jcgay.maven.plugins</groupId>
                <artifactId>buildplan-maven-plugin</artifactId>
                <version>1.5</version>
                <configuration>
                    <tasks>
                        <task>clean</task>
                        <task>deploy</task>
                    </tasks>
                    <showAllPhases>true</showAllPhases>
                </configuration>
            </plugin>
            <!--endregion-->

            <!--region No phase-->
            <plugin>
                <groupId>org.openrewrite.maven</groupId>
                <artifactId>rewrite-maven-plugin</artifactId>
            </plugin>
            <!--endregion-->

        </plugins>

        <pluginManagement>
            <plugins>

                <!--region Phase 4: process-sources-->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>3.5.0</version>
                </plugin>
                <!--endregion-->

                <!--region Phase 3: generate-sources-->
                <plugin>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <!--endregion-->

                <!--region Phase 0: clean-->
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.3.2</version>
                </plugin>
                <!--endregion-->

                <!--region Phase 7: compile-->
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.13.0</version>
                    <configuration>
                        <!-- https://docs.oracle.com/javase/9/tools/javac.htm -->
                        <!-- Generates metadata for reflection on method parameters. Stores formal parameter names of constructors and methods in the generated class file so that the method java.lang.reflect.Executable.getParameters from the Reflection API can retrieve them. -->
                        <parameters>true</parameters>
                        <useIncrementalCompilation>false</useIncrementalCompilation>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>com.google.auto.service</groupId>
                                <artifactId>auto-service</artifactId>
                                <version>1.0.1</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>
                <!--endregion-->

                <!--region Phase 22: install-->
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>3.1.1</version>
                </plugin>
                <!--endregion-->

                <!--region Phase 17: package-->
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.3.0</version>
                    <configuration>
                        <archive>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>
                <!--endregion-->

                <!--region Phase 3: generate-sources through Phase 17: package-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-plugin-plugin</artifactId>
                    <version>3.12.0</version>
                    <executions>
                        <execution>
                            <id>mojo-descriptor</id>
                            <goals>
                                <goal>descriptor</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>help-goal</id>
                            <goals>
                                <goal>helpmojo</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!--endregion-->

                <!--region No phase-->
                <plugin>
                    <groupId>org.openrewrite.maven</groupId>
                    <artifactId>rewrite-maven-plugin</artifactId>
                    <version>5.28.0</version>
                    <configuration>
                        <failOnDryRunResults>true</failOnDryRunResults>
                        <activeRecipes>
                            <recipe>org.openrewrite.java.logging.slf4j.LoggersNamedForEnclosingClass</recipe>
                            <recipe>org.openrewrite.java.logging.slf4j.Slf4jLogShouldBeConstant</recipe>

                            <recipe>org.openrewrite.apache.commons.codec.ApacheBase64ToJavaBase64</recipe>
                            <recipe>org.openrewrite.apache.commons.io.ApacheCommonsFileUtilsRecipes</recipe>
                            <recipe>org.openrewrite.apache.commons.lang.ApacheCommonsStringUtilsRecipes</recipe>

                            <recipe>org.openrewrite.java.testing.assertj.Assertj</recipe>
                            <recipe>org.openrewrite.java.testing.junit5.JUnit5BestPractices</recipe>

                            <recipe>org.openrewrite.java.migrate.UpgradeToJava17</recipe>
                        </activeRecipes>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.openrewrite.recipe</groupId>
                            <artifactId>rewrite-static-analysis</artifactId>
                            <version>1.4.2</version>
                        </dependency>
                        <dependency>
                            <groupId>org.openrewrite.recipe</groupId>
                            <artifactId>rewrite-migrate-java</artifactId>
                            <version>2.11.0</version>
                        </dependency>
                        <dependency>
                            <groupId>org.openrewrite.recipe</groupId>
                            <artifactId>rewrite-testing-frameworks</artifactId>
                            <version>2.6.0</version>
                        </dependency>
                        <dependency>
                            <groupId>org.openrewrite.recipe</groupId>
                            <artifactId>rewrite-logging-frameworks</artifactId>
                            <version>2.5.0</version>
                        </dependency>
                        <dependency>
                            <groupId>org.openrewrite.recipe</groupId>
                            <artifactId>rewrite-apache</artifactId>
                            <version>0.1.2</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <!--endregion-->

                <!--region No phase-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>3.0.1</version>
                    <configuration>
                        <mavenExecutorId>forked-path</mavenExecutorId>
                        <autoVersionSubmodules>true</autoVersionSubmodules>
                        <pushChanges>false</pushChanges>
                        <tagNameFormat>@{project.version}</tagNameFormat>
                    </configuration>
                </plugin>
                <!--endregion-->

                <!--region Phase 6: process-resources-->
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.3.1</version>
                </plugin>
                <!--endregion-->

                <!--region Phase 1: validate-->
                <plugin>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>3.4.1</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.codehaus.mojo</groupId>
                            <artifactId>extra-enforcer-rules</artifactId>
                            <version>1.8.0</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <!--endregion-->

                <!--region No phase-->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>2.16.2</version>
                    <configuration>
                        <processAllModules>true</processAllModules>
                        <generateBackupPoms>false</generateBackupPoms>
                    </configuration>
                </plugin>
                <!--endregion-->

                <!--region Phase 15: test-->
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.2.5</version>
                    <configuration>
                        <includes>
                            <include>**/*Test.java</include>
                        </includes>
                        <argLine>-XX:-OmitStackTraceInFastThrow -Xms1024m -Xmx2048m --illegal-access=permit</argLine>
                        <runOrder>random</runOrder>
                        <trimStackTrace>false</trimStackTrace>
                        <encoding>UTF-8</encoding>
                        <argLine>-Dfile.encoding=UTF-8</argLine>
                    </configuration>
                </plugin>
                <!--endregion-->

                <!--region Phase 3: generate-sources-->
                <plugin>
                    <groupId>org.antlr</groupId>
                    <artifactId>antlr4-maven-plugin</artifactId>
                    <version>4.9.3</version>
                    <executions>
                        <execution>
                            <id>antlr</id>
                            <goals>
                                <goal>antlr4</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <listener>true</listener>
                        <visitor>true</visitor>
                        <treatWarningsAsErrors>true</treatWarningsAsErrors>
                    </configuration>
                </plugin>
                <!--endregion-->

                <!--region No Phase-->
                <plugin>
                    <artifactId>maven-wrapper-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
                <!--endregion-->

            </plugins>
        </pluginManagement>
    </build>

    <profiles>

        <!--region Phase 16: prepare-package-->
        <profile>
            <id>znai-maven-plugin</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.testingisdocumenting.znai</groupId>
                        <artifactId>znai-maven-plugin</artifactId>
                        <version>1.68</version>
                        <configuration>
                            <docId>docs</docId>
                            <sourceRoot>${project.basedir}/src/main/znai</sourceRoot>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!--region Phase 21: verify-->
        <profile>
            <id>checkstyle-semantics</id>

            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-checkstyle-plugin</artifactId>
                        <configuration>
                            <configLocation>checkstyle-configuration-liftwizard-semantics.xml</configLocation>
                            <suppressionsLocation>checkstyle-suppressions-liftwizard.xml</suppressionsLocation>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>io.liftwizard</groupId>
                                <artifactId>liftwizard-checkstyle</artifactId>
                                <version>${project.version}</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <id>Checkstyle: semantics</id>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                                <phase>prepare-package</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!--endregion-->

        <!--region Phase 21: verify-->
        <profile>
            <id>checkstyle-formatting</id>

            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-checkstyle-plugin</artifactId>
                        <configuration>
                            <configLocation>checkstyle-configuration-liftwizard-formatting.xml</configLocation>
                            <suppressionsLocation>checkstyle-suppressions-liftwizard.xml</suppressionsLocation>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>io.liftwizard</groupId>
                                <artifactId>liftwizard-checkstyle</artifactId>
                                <version>${project.version}</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <id>Checkstyle: formatting</id>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                                <phase>prepare-package</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>

        </profile>
        <!--endregion-->

        <!--region Phase 21: verify-->
        <profile>
            <id>maven-dependency-plugin</id>

            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <artifactId>maven-dependency-plugin</artifactId>
                            <version>3.6.1</version>
                            <configuration>
                                <failOnWarning>true</failOnWarning>
                                <!-- Workaround for bug in maven-dependency-plugin tracked in https://issues.apache.org/jira/browse/MDEP-791 -->
                                <!-- Version 3.1.2 was the last version with a working algorithm. Version 3.2.0 and 3.6.1 support Java 17. -->
                                <ignoredNonTestScopedDependencies>
                                    <ignoredNonTestScopedDependency>*</ignoredNonTestScopedDependency>
                                </ignoredNonTestScopedDependencies>
                                <ignoredUnusedDeclaredDependencies>
                                    <ignoredUnusedDeclaredDependency>com.google.auto.service:auto-service-annotations</ignoredUnusedDeclaredDependency>
                                    <ignoredUnusedDeclaredDependency>io.liftwizard:liftwizard-logging-buffered-appender</ignoredUnusedDeclaredDependency>
                                    <ignoredUnusedDeclaredDependency>org.eclipse.collections:eclipse-collections</ignoredUnusedDeclaredDependency>
                                    <ignoredUnusedDeclaredDependency>org.hamcrest:hamcrest-core</ignoredUnusedDeclaredDependency>
                                    <ignoredUnusedDeclaredDependency>junit:junit</ignoredUnusedDeclaredDependency>
                                    <ignoredUnusedDeclaredDependency>org.junit.jupiter:junit-jupiter-api</ignoredUnusedDeclaredDependency>
                                    <ignoredUnusedDeclaredDependency>org.junit.vintage:junit-vintage-engine</ignoredUnusedDeclaredDependency>
                                </ignoredUnusedDeclaredDependencies>
                            </configuration>

                            <executions>
                                <execution>
                                    <goals>
                                        <goal>analyze-only</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>

                    </plugins>
                </pluginManagement>

                <plugins>
                    <plugin>
                        <artifactId>maven-dependency-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!--endregion-->

        <!--region No phase-->
        <profile>
            <id>rewrite-maven-plugin</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.openrewrite.maven</groupId>
                            <artifactId>rewrite-maven-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>OpenRewrite dry run</id>
                                    <goals>
                                        <goal>dryRunNoFork</goal>
                                    </goals>
                                    <phase>verify</phase>
                                </execution>
                            </executions>
                            <configuration>
                                <activeRecipes>
                                    <!-- Based on https://github.com/openrewrite/rewrite-static-analysis/blob/main/src/main/resources/META-INF/rewrite/static-analysis.yml-->
                                    <!-- But these recipes are disabled in Liftwizard:-->
                                    <!-- - org.openrewrite.staticanalysis.EqualsAvoidsNull-->
                                    <!-- As well as all formatting recipes, since we can rely on auto-formatters instead.-->
                                    <!-- - org.openrewrite.java.format.MethodParamPad-->
                                    <!-- - org.openrewrite.java.format.NoWhitespaceAfter-->
                                    <!-- - org.openrewrite.java.format.NoWhitespaceBefore-->
                                    <!-- - org.openrewrite.java.format.PadEmptyForLoopComponents-->
                                    <recipe>io.liftwizard.staticanalysis.CodeCleanup</recipe>

                                    <!-- Based on https://github.com/openrewrite/rewrite-static-analysis/blob/main/src/main/resources/META-INF/rewrite/common-static-analysis.yml-->
                                    <!-- But these recipes are disabled in Liftwizard:-->
                                    <!-- - org.openrewrite.staticanalysis.EqualsAvoidsNull-->
                                    <!-- - org.openrewrite.staticanalysis.InlineVariable-->
                                    <!-- - org.openrewrite.staticanalysis.StringLiteralEquality-->
                                    <recipe>io.liftwizard.staticanalysis.CommonStaticAnalysis</recipe>

                                    <recipe>org.openrewrite.java.logging.slf4j.LoggersNamedForEnclosingClass</recipe>
                                    <recipe>org.openrewrite.java.logging.slf4j.Slf4jLogShouldBeConstant</recipe>

                                    <recipe>org.openrewrite.apache.commons.codec.ApacheBase64ToJavaBase64</recipe>
                                    <recipe>org.openrewrite.apache.commons.io.ApacheCommonsFileUtilsRecipes</recipe>
                                    <recipe>org.openrewrite.apache.commons.lang.ApacheCommonsStringUtilsRecipes</recipe>

                                    <recipe>org.openrewrite.java.testing.assertj.Assertj</recipe>
                                    <recipe>org.openrewrite.java.testing.junit5.JUnit5BestPractices</recipe>

                                    <recipe>org.openrewrite.java.migrate.UpgradeToJava17</recipe>
                                </activeRecipes>
                            </configuration>
                            <dependencies>
                                <dependency>
                                    <groupId>io.liftwizard</groupId>
                                    <artifactId>liftwizard-rewrite</artifactId>
                                    <version>2.1.7-SNAPSHOT</version>
                                </dependency>
                                <dependency>
                                    <groupId>org.openrewrite.recipe</groupId>
                                    <artifactId>rewrite-static-analysis</artifactId>
                                    <version>1.4.2</version>
                                </dependency>
                                <dependency>
                                    <groupId>org.openrewrite.recipe</groupId>
                                    <artifactId>rewrite-migrate-java</artifactId>
                                    <version>2.11.0</version>
                                </dependency>
                                <dependency>
                                    <groupId>org.openrewrite.recipe</groupId>
                                    <artifactId>rewrite-testing-frameworks</artifactId>
                                    <version>2.6.0</version>
                                </dependency>
                                <dependency>
                                    <groupId>org.openrewrite.recipe</groupId>
                                    <artifactId>rewrite-logging-frameworks</artifactId>
                                    <version>2.5.0</version>
                                </dependency>
                                <dependency>
                                    <groupId>org.openrewrite.recipe</groupId>
                                    <artifactId>rewrite-apache</artifactId>
                                    <version>0.1.2</version>
                                </dependency>
                            </dependencies>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <plugin>
                        <groupId>org.openrewrite.maven</groupId>
                        <artifactId>rewrite-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!--endregion-->

        <profile>
            <id>deploy</id>

            <distributionManagement>
                <snapshotRepository>
                    <id>ossrh</id>
                    <name>Sonatype Nexus Snapshots</name>
                    <url>https://oss.sonatype.org/content/repositories/snapshots</url>
                </snapshotRepository>

                <repository>
                    <id>ossrh</id>
                    <name>Nexus Release Repository</name>
                    <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
                </repository>
            </distributionManagement>

            <build>
                <plugins>

                    <!--region Phase 23: deploy-->
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>1.6.13</version>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>ossrh</serverId>
                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>true</autoReleaseAfterClose>
                            <autoDropAfterRelease>true</autoDropAfterRelease>
                            <keepStagingRepositoryOnCloseRuleFailure>true</keepStagingRepositoryOnCloseRuleFailure>
                            <keepStagingRepositoryOnFailure>true</keepStagingRepositoryOnFailure>
                            <skipLocalStaging>true</skipLocalStaging>
                        </configuration>
                    </plugin>
                    <!--endregion-->

                    <!--region Phase 17: package-->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>3.3.0</version>
                        <executions>
                            <execution>
                                <id>create source jar</id>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!--endregion-->

                    <!--region Phase 17: package-->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>3.6.3</version>
                        <configuration>
                            <notimestamp>true</notimestamp>
                        </configuration>
                        <executions>
                            <execution>
                                <id>create javadoc jar</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!--endregion-->

                    <!--region Phase 21: verify-->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>3.2.2</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                                <configuration>
                                    <!-- Prevent `gpg` from using pinentry programs -->
                                    <!-- https://github.com/samuelmeuli/action-maven-publish/issues/1 -->
                                    <gpgArguments>
                                        <arg>--pinentry-mode</arg>
                                        <arg>loopback</arg>
                                    </gpgArguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!--endregion-->
                </plugins>
            </build>
        </profile>

        <!--region Phase 1: validate-->
        <profile>
            <id>maven-enforcer-plugin</id>

            <build>
                <plugins>

                    <plugin>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>enforce</id>
                                <configuration>
                                    <rules>
                                        <DependencyConvergence />
                                        <requireJavaVersion>
                                            <version>17</version>
                                        </requireJavaVersion>
                                        <requireMavenVersion>
                                            <version>3.8.6</version>
                                        </requireMavenVersion>
                                        <requirePluginVersions>
                                            <unCheckedPluginList>
                                                org.apache.maven.plugins:maven-site-plugin,
                                                org.apache.maven.plugins:maven-deploy-plugin,
                                                io.liftwizard:liftwizard-generator-reladomo-code-plugin,
                                                io.liftwizard:liftwizard-generator-reladomo-database-plugin,
                                                io.liftwizard:liftwizard-generator-xsd2bean-plugin
                                            </unCheckedPluginList>
                                        </requirePluginVersions>
                                        <bannedDependencies>
                                            <excludes>
                                                <exclude>log4j:log4j</exclude>
                                                <exclude>commons-logging-api</exclude>
                                                <exclude>commons-logging</exclude>
                                                <exclude>org.apache.logging.log4j:log4j</exclude>
                                                <exclude>org.slf4j:slf4j-simple</exclude>
                                                <exclude>org.slf4j:slf4j-log4j12</exclude>
                                                <exclude>org.slf4j:slf4j-jdk14</exclude>
                                                <exclude>org.slf4j:nop</exclude>
                                                <exclude>org.slf4j:jcl</exclude>
                                            </excludes>
                                        </bannedDependencies>
                                        <banDuplicatePomDependencyVersions />
                                        <banDuplicateClasses>
                                            <findAllDuplicates>true</findAllDuplicates>
                                            <ignoreWhenIdentical>true</ignoreWhenIdentical>
                                        </banDuplicateClasses>
                                        <enforceBytecodeVersion>
                                            <maxJdkVersion>17</maxJdkVersion>
                                        </enforceBytecodeVersion>
                                    </rules>
                                </configuration>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                </plugins>
            </build>
        </profile>
        <!--endregion-->

        <!--region Phase 15: test-->
        <profile>
            <id>rerecord</id>

            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <artifactId>maven-surefire-plugin</artifactId>
                            <configuration>
                                <environmentVariables>
                                    <LIFTWIZARD_FILE_MATCH_RULE_RERECORD>true</LIFTWIZARD_FILE_MATCH_RULE_RERECORD>
                                </environmentVariables>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <!--endregion-->

        <!--region Phase 17: package-->
        <profile>
            <id>maven-shade-plugin</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <artifactId>maven-shade-plugin</artifactId>
                            <version>3.5.2</version>
                            <configuration>
                                <createDependencyReducedPom>true</createDependencyReducedPom>
                                <transformers>
                                    <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                        <resource>reference.conf</resource>
                                    </transformer>
                                    <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
                                    <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                        <mainClass>${mainClass}</mainClass>
                                    </transformer>
                                </transformers>
                                <!-- exclude signed Manifests -->
                                <filters>
                                    <filter>
                                        <artifact>*:*</artifact>
                                        <excludes>
                                            <exclude>module-info.class</exclude>
                                            <exclude>META-INF/*.SF</exclude>
                                            <exclude>META-INF/*.DSA</exclude>
                                            <exclude>META-INF/*.RSA</exclude>
                                        </excludes>
                                    </filter>
                                </filters>
                            </configuration>
                            <executions>
                                <execution>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>shade</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <!--endregion-->

    </profiles>

</project>
